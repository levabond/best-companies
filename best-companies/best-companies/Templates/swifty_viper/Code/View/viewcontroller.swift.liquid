//
//  {{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

protocol {{ module_info.name }}ViewInput: class {

    /**
        @author {{ developer.name }}
        Setup initial state of the view
    */

    func setupInitialState()
}

protocol {{ module_info.name }}ViewOutput {

    /**
        @author {{ developer.name }}
        Notify presenter that view is ready
    */

    func viewIsReady()
}

import UIKit

class {{ module_info.name }}ViewController: UIViewController, {{module_info.name}}ViewInput {

    var output: {{ module_info.name }}ViewOutput!

    // MARK: Life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewIsReady()
    }

  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
  	super.init(nibName: nil, bundle: nil)
    configure()
    setupViews()
  }
  
  func configure() {
    let configurator = CompaniesModuleConfigurator()
    configurator.configureModuleForViewInput(viewInput: self)
  }
  
  required init?(coder aDecoder: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }
  


	// MARK: {{module_info.name}}ViewInput
	func setupInitialState() {
	}

	// MARK: Configure

	func configure() {
	  let configurator = {{ module_info.name }}ModuleConfigurator()
	  configurator.configureModuleForViewInput(viewInput: {{ module_info.name | downcase }}ViewController)
	}
}
